# Netlify configuration file for EduHelpSL backend
# This configuration sets up Netlify Functions to handle API requests.

[build]
  # 'publish' should point to your frontend's build output directory if Netlify were building it.
  # Since Firebase hosts the frontend, this might be less critical here, but set it if you have one (e.g., 'public', 'dist').
  publish = "public" # Adjust if your static site output is different or not applicable.
  command = "echo 'Backend on Netlify Functions. Frontend on Firebase.'" # Example build command

[functions]
  # Directory containing Netlify Functions, relative to the project root.
  directory = "functions"
  
  # Using esbuild for bundling Node.js functions is generally faster.
  node_bundler = "esbuild"

# Optional: Plugin to automatically install function dependencies.
[[plugins]]
  package = "@netlify/plugin-functions-install-core"

# Redirect rules to route specific API calls to their respective Netlify Functions.
# The frontend will call /api/health, Netlify rewrites this to execute the 'health' function.
[[redirects]]
  from = "/api/health"
  to = "/.netlify/functions/health"
  status = 200 # Use 200 for function rewrites

# The frontend will call /api/keys, Netlify rewrites this to execute the 'getKeys' function.
[[redirects]]
  from = "/api/keys"
  to = "/.netlify/functions/getKeys"
  status = 200 # Use 200 for function rewrites

# IMPORTANT: Any other /api/* routes that were previously handled by an 'api.js' router
# would need their own specific redirects or be handled differently if that 'api.js' is removed.
# The previous generic '/api/*' and '/api' redirects have been removed to avoid conflicts
# with the specific routes above.

# Environment variables (these should be configured in the Netlify UI dashboard for security):
# Example:
# GEMINI_API_KEY = "your_actual_gemini_api_key_from_netlify_env_vars"
# GOOGLE_DRIVE_API_KEY = "your_actual_drive_api_key_from_netlify_env_vars"